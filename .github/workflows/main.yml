name: CI-CD-EC2-Pipeline
env:
  AWS_REGION_NAME             : "us-east-2"
  AWS_S3_BUCKET               : "user-apps"
  SPRING_BOOT_JAR_PATH        : "awsspringboot/target/*.jar"
  LAMBDA_HANDLER_JAR_PATH     : "awslambda/target/awslambda-*.jar"
  NEW_SPRING_BOOT_APP_NAME    : "aws-spring-boot-${GITHUB_SHA::8}.jar"
  NEW_LAMBDA_HANDLER_APP_NAME : "aws-lambda-${GITHUB_SHA::8}.jar"
  DYNAMO_DB_ENDPOINT          : "dynamodb.us-east-2.amazonaws.com"
  SQS_ENDPOINT                : "sqs.us-east-2.amazonaws.com"
  SQS_BOOK_ENDPOINT           : "256935796161/book-sqs.fifo"
  SQS_BOOK_GROUP              : "book-sqs"
  CLOUDFORMATION_TEMPLATE     : "book.template"


on:
  push:
    branches: [ master ]

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:

      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Maven Package
        run: mvn -B clean package -DskipTests

      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.AWS_SECRET_KEY }}
          aws-region           :  ${{ env.AWS_REGION_NAME }}

      - name: Copy Spring Boot jar to S3
        run:  aws s3 cp ${{ env.SPRING_BOOT_JAR_PATH }} s3://${{ env.AWS_S3_BUCKET }}/${{ env.NEW_SPRING_BOOT_APP_NAME }}

      - name: Copy Lambda Handler jar to S3
        run:  aws s3 cp ${{ env.LAMBDA_HANDLER_JAR_PATH }} s3://${{ env.AWS_S3_BUCKET }}/${{ env.NEW_LAMBDA_HANDLER_APP_NAME }}
        
      - name: Copy Cloudformation template to S3
        run: |
          aws s3 rm s3://${{ env.AWS_S3_BUCKET }}${{ env.CLOUDFORMATION_TEMPLATE }} \
          && aws s3 cp ./book.json s3://${{ env.AWS_S3_BUCKET }}${{ env.CLOUDFORMATION_TEMPLATE }}  
  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:

      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    :  ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.AWS_SECRET_KEY }}
          aws-region           :  ${{ env.AWS_REGION_NAME }}

      - name: Create Cloudformation stack
        run : |
          aws cloudformation deploy \
          --stack-name AWSBookDemo \
          --parameter-overrides SpringBootAppName=${{ env.NEW_SPRING_BOOT_APP_NAME }},LambdaHandlerAppName=${{ env.NEW_LAMBDA_HANDLER_APP_NAME }},AccessKey=${{ secrets.AWS_ACCESS_KEY }},SecretKey=${{ secrets.AWS_SECRET_KEY }},Region=${{ env.AWS_REGION_NAME }},DynamoDbEndpoint=${{ env.DYNAMO_DB_ENDPOINT }},SqsEndpoint=${{ env.SQS_ENDPOINT }},SqsBookEndpoint=${{ env.SQS_BOOK_ENDPOINT }},SqsBookGroup=${{ env.SQS_BOOK_GROUP }} \
          --s3-bucket ${{ env.AWS_S3_BUCKET }}
          --template-file ${{ env.CLOUDFORMATION_TEMPLATE } \
          --capabilities CAPABILITY_IAM \
          --no-fail-on-empty-changeset
